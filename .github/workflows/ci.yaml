name: CI

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11", "3.12", "3.13"]
        experimental: [false]
        include:
          - python-version: "3.12"
            os: "ubuntu-latest"
            experimental: true

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      UNSTABLE: ${{ matrix.experimental }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --group test
          python -m pip install -e .[all]

      - name: Install unstable dependencies
        if: matrix.experimental == true
        shell: bash -l {0}
        run: |
          python -m pip install \
          --no-deps --pre --upgrade \
          "watchdog!=4.0.0" numpy; \
          python -m pip install \
          --no-deps --upgrade \
          git+https://github.com/pytroll/posttroll \
          git+https://github.com/pytroll/pytroll-schedule \
          git+https://github.com/pytroll/trollsift;

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest --cov=pytroll_collectors pytroll_collectors/tests --cov-report=xml

      - name: Upload unittest coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: unittests
          files: ./coverage.xml
          env_vars: OS,PYTHON_VERSION,UNSTABLE
          fail_ci_if_error: false

      - name: Coveralls Parallel
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-${{ matrix.test_number }}
          parallel: true
        if: runner.os == 'Linux'

  coveralls:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
